@model MaxxExpress.Areas.WorkPage.Models.WorkViewModel
<form class="loadeditform" enctype="multipart/form-data">
    <div id="editLoad_InfoBox" class="card border border-secondary EditLoadInfoBox">
        <div class="card-header card-header-customer">
            <div id="editLoad-customer" class="col-md-12" style="padding-left: 0px;">
                <div class="col-md-4 form-group" style="padding-left: 0px;">
                    <span class="dtl_label-main ">Load Number :</span>
                    <span id="vM_EditLoadData_LoadNbr" class="dtl_value dtl_number padding-right-md">@Html.TextBoxFor(m => m.vM_EditLoadData.Load_Number, new { @class = "form-control", @style = "color:#fff; background-color: #000;", disabled = true })</span>
                </div>
                <div class="col-md-4 form-group">
                    <span class="dtl_label-main ">Amerifield # :</span>
                    <span class="dtl_value padding-right-md"><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Aux_Load_Number, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%; background: transparent; color: whitesmoke;" } })</span></span>
                </div>
                
            </div>
        </div>
        <div class="card-body">

            <div class="col-md-12 no-pad-bottom">
                <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_label">Load Date</span><span class="dtl_value money-dtl">@Html.DropDownListFor(m => m.EditLoad_Load_Date, new SelectList(Model.EditLoad_DayofWeek_List, "Id", "Value"), new { @class = "form-control dtl_number" })</span></div>
                <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_value padding-right-md">Route :</span><span class="dtl_value padding-right-md">@Html.DropDownListFor(m => m.vM_EditLoadData.Route_ID, new SelectList(Model.EditLoad_Route_List, "Id", "Value"), "Select Route", new { @class = "form-control", @onchange = "getRouteDetails(this)" })</span></div>
                <div class="col-md-4 form-group" style="padding-left:0px;">
                    <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Driver</span><span class="dtl_value money-round-dtl">@Html.DropDownListFor(m => m.EditLoad_Driver_Nbr, new SelectList(Model.EditLoad_Driver_List, "Id", "Value", Model.EditLoad_Driver_Nbr), new { @class = "form-control" })</span></div>
                    <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Truck</span><span class="dtl_value money-dtl">@Html.DropDownListFor(m => m.EditLoad_Truck_Nbr, new SelectList(Model.EditLoad_Truck_List, "Id", "Value", Model.EditLoad_Truck_Nbr), new { @class = "form-control" })</span></div>
                </div>
            </div>
@{
    if (Session["LogUserAccess"].ToString() == "Driver")
    {
        <div class="col-md-12 no-pad-bottom hide">
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-left: 0px"><span class="dtl_label">Payout</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Payout, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%" } })</span></div>
                <div class="col-md-6" style="padding-left: 0px; padding-right:0px;"><span class="dtl_label">LTL?</span><span class="dtl_value padding-right-md">@Html.DropDownListFor(m => m.vM_EditLoadData.LTL, new SelectList(Model.EditLoad_LTL_IND_List, "Id", "Value"), new { @class = "form-control" })</span></div>
            </div>
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-left: 0px"><span class="dtl_label">PPM</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.PPM, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
                <div class="col-md-6" style="padding-left: 0px; padding-right:0px;"><span class="dtl_label">PPM</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.T_PPM, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
            </div>
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Weight : </span><span class="dtl_value padding-right-md money-round-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Weight, new { htmlAttributes = new { @class = "form-control dtl_number" } })</span></div>
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Contents : </span><span class="dtl_value padding-right-md money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Contents, new { htmlAttributes = new { @class = "form-control" } })</span></div>
            </div>
        </div>

        <div class="col-md-12 no-pad-bottom hide">
            <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_label">Customer : </span><span class="dtl_value padding-right-md money-dtl">@Html.DropDownListFor(m => m.EditLoad_Customer_ID, new SelectList(Model.EditLoad_Customer_List, "Id", "Value", Model.EditLoad_Customer_ID), new { @class = "form-control no-pad-vertical" })</span></div>
            <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_label">Trailer</span><span class="dtl_value money-dtl">@Html.DropDownListFor(m => m.EditLoad_Trailer_Nbr, new SelectList(Model.EditLoad_Trailer_List, "Id", "Value", Model.EditLoad_Trailer_Nbr), new { @class = "form-control" })</span></div>
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Total Miles</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Total_Miles, new { htmlAttributes = new { @class = "form-control dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Load Miles</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Total_Load_Miles, new { htmlAttributes = new { @class = "form-control dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
            </div>

        </div>
    }
    else
    {
        <div class="col-md-12 no-pad-bottom">
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-left: 0px"><span class="dtl_label">Payout</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Payout, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%" } })</span></div>
                <div class="col-md-6" style="padding-left: 0px; padding-right:0px;"><span class="dtl_label">LTL?</span><span class="dtl_value padding-right-md">@Html.DropDownListFor(m => m.vM_EditLoadData.LTL, new SelectList(Model.EditLoad_LTL_IND_List, "Id", "Value"), new { @class = "form-control" })</span></div>
            </div>
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-left: 0px"><span class="dtl_label">PPM</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.PPM, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
                <div class="col-md-6" style="padding-left: 0px; padding-right:0px;"><span class="dtl_label">PPM</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.T_PPM, new { htmlAttributes = new { @class = "form-control dtl_number dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
            </div>
            <div class="col-md-4 form-group" style="padding-left:0px;">
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Weight : </span><span class="dtl_value padding-right-md money-round-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Weight, new { htmlAttributes = new { @class = "form-control dtl_number" } })</span></div>
                <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Contents : </span><span class="dtl_value padding-right-md money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Contents, new { htmlAttributes = new { @class = "form-control" } })</span></div>
            </div>
        </div>

            <div class="col-md-12 no-pad-bottom">
                <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_label">Customer : </span><span class="dtl_value padding-right-md money-dtl">@Html.DropDownListFor(m => m.EditLoad_Customer_ID, new SelectList(Model.EditLoad_Customer_List, "Id", "Value", Model.EditLoad_Customer_ID), new { @class = "form-control no-pad-vertical" })</span></div>
                <div class="col-md-4 form-group" style="padding-left:0px;"><span class="dtl_label">Trailer</span><span class="dtl_value money-dtl">@Html.DropDownListFor(m => m.EditLoad_Trailer_Nbr, new SelectList(Model.EditLoad_Trailer_List, "Id", "Value", Model.EditLoad_Trailer_Nbr), new { @class = "form-control" })</span></div>
                <div class="col-md-4 form-group" style="padding-left:0px;">
                    <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Total Miles</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Total_Miles, new { htmlAttributes = new { @class = "form-control dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
                    <div class="col-md-6" style="padding-right: 0px"><span class="dtl_label">Load Miles</span><span class="dtl_value money-dtl">@Html.EditorFor(m => m.vM_EditLoadData.Total_Load_Miles, new { htmlAttributes = new { @class = "form-control dtl_number pull-left", @style = "width:100%", @disabled = true } })</span></div>
                </div>

            </div>

    }
}


            <div class="col-md-12 padding-top-lg">
                <div class="col-md-6 form-group" style="margin-bottom: 0px; padding-left: 0px;">
                    <span class="dtl_label">Pickup Paperwork : </span>
                    @if (Model.EditLoad_HasLoad_LoadConfirmation)
                    {
                        <br /><span id="loadConfirmation-spn" class="dtl_number"><i class="fa fa-paperclip" aria-hidden="true"></i><a target="_blank" class="dtl_number" href=@Html.DisplayFor(m => m.vM_EditLoadData.Load_Confirmation_URL)>@Html.DisplayFor(m => m.vM_EditLoadData.Load_Number) .pdf</a></span>
                    }
                    else
                    {
                        <br /><span id="loadConfirmation-spn" class="dtl_number"><i class="fa fa-paperclip" aria-hidden="true"></i> <span style="color:red">No Pickup Paperwork Attached</span> </span>

                    }
                    @Html.EditorFor(m => m.vM_EditLoadData.Load_Confirmation_URL, new { htmlAttributes = new { @class = "form-control", @hidden = true } })
                </div>
                <div class="col-md-6 form-group" style="margin-bottom: 0px; padding-left: 0px;">
                    <span class="dtl_label">Delivery Paperwork : </span>
                    @if (Model.EditLoad_HasDeliveryConfirmation)
                    {
                        <br /><span id="loadConfirmation-spn" class="dtl_number"><i class="fa fa-paperclip" aria-hidden="true"></i><a target="_blank" class="dtl_number" href=@Html.DisplayFor(m => m.vM_EditLoadData.BOL_URL)>@Html.DisplayFor(m => m.vM_EditLoadData.Load_Number) .jpg</a></span>
                    }
                    else
                    {
                        <br /><span id="loadConfirmation-spn" class="dtl_number"><i class="fa fa-paperclip" aria-hidden="true"></i> <span style="color:red">No Delivery Paperwork Attached</span> </span>

                    }
                    @Html.EditorFor(m => m.vM_EditLoadData.BOL_URL, new { htmlAttributes = new { @class = "form-control", @hidden = true } })
                </div>
            </div>

@{
    if (Session["LogUserAccess"].ToString() == "Driver")
    {
        //Moved to Bottom for Driver
    }
    else
    {
        <div class="col-md-12 padding-top-lg" style="padding-bottom: 10%;">
            <div class="col-md-6 form-group no-pad-horizontal">
                <span class="dtl_label ">Load Confirmation :</span>
                <div class="col-md-11 no-pad-horizontal">
                    <div class="col-md-8 no-pad-horizontal">
                        <span id="editLoad-uploadbox" class="btn btn-basic fileinput-button fileInput-maxx">
                            <span id="EditLoad_LoadConfirmation_Filename" class="dtl_number">Select File</span>
                            <input id="EditLoad_LoadConfirmation_Upload" namde="EditLoad_LoadConfirmation_Upload" class="LoadConfirmationUpload" type="file" onchange="getfilename()">
                        </span>
                        <div id="editLoad_UploadProgress" class=""></div>
                    </div>
                    <div class="col-md-4 no-pad-horizontal">
                        <span class="btn btn-primary fileinput-button EditLoad_LoadConfirmationUpload_Submit" style="width: 100%">
                            <span>Upload</span>
                            <input class="EditLoad_LoadConfirmationUpload_Submit LoadConfirmationUpload" type="button">
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-6 form-group no-pad-horizontal">
                <span class="dtl_label">Delivery Paperwork Upload :</span>
                <div id="modal-delivered-text" class="text-center col-md-11 no-pad-horizontal">
                    <div class="col-md-8 no-pad-horizontal">
                        <span id="EditLoad-uploadbox" class="btn btn-basic fileinput-button fileInput-maxx">
                            <span id="EditLoad_LoadDeilvery_Filename" class="dtl_number">Select File</span>
                            <input id="DeliverLoad_BOL_Upload" name="EditLoad_BOL_Upload" class="LoadBOLUpload" type="file" onchange="getBOLname()">
                        </span>
                        <div id="EditLoad_UploadProgress" class=""></div>
                    </div>
                    <div class="col-md-4 no-pad-horizontal">
                        <span class="btn btn-primary fileinput-button DeliverLoad_BOLUpload_Submit" style="width: 100%">
                            <span>Upload</span>
                            <input class="EditLoad_BOLUpload_Submit BOLUpload" type="button">
                        </span>
                    </div>
                    <input id="DeliverLoad_BOL_URL" name="BOL_URL" class="form-group" type="text" hidden>
                    <input id="DeliverLoad_BOL_FILE_TYPE" name="BOL_FILE_TYPE" class="form-group" type="text" hidden>
                </div>
            </div>
        </div>
    }

}

            

            </div>
        </div>
            <div class="col-md-12">
                <span class="dtl_label padding-right-md"></span>
            </div>

            <div class="col-md-6 form-group">
                <div id="editLoad_DetailBox" class="card border border-secondary">
                    <div class="card-header card-header-pickup">
                        <strong class="card-title">Pickup Info</strong>
                    </div>
                    <div class="card-body">
                        <div class="col-md-6 form-group">Pickup :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Pickup_Location, new { htmlAttributes = new { @class = "form-control dtl_location sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Pickup Address :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Pickup_Address, new { htmlAttributes = new { @class = "form-control sand_load_input" } }) </div>

                        <div class="col-md-6 form-group">Pickup Date :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Pickup_Date, new { htmlAttributes = new { @class = "form-control date-field dtl_number sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Pickup Time :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Pickup_Time, new { htmlAttributes = new { @class = "form-control sand_load_input" } })</div>

                        <div class="col-md-6 form-group hide">Pickup Deadhead :</div>
                        <div class="col-md-6 form-group hide">@Html.EditorFor(m => m.vM_EditLoadData.Deadhead_Miles, new { htmlAttributes = new { @class = "form-control sand_load_input", @onkeyup = "recalc_Miles()" } })</div>
                    </div>
                </div>
            </div>


            <div id="dtl-dropoff-1" class="col-md-6 form-group">
                <div class="card border border-secondary">
                    <div class="card-header">
                        <strong class="card-title">Dropoff 1 Info</strong>
                    </div>
                    <div class="card-body">
                        <div class="col-md-6 form-group">Dropoff Well:</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_1_Location, new { htmlAttributes = new { @class = "form-control dtl_location sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Dropoff Address :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_1_Address, new { htmlAttributes = new { @class = "form-control sand_load_input" } }) </div>

                        <div class="col-md-6 form-group">Dropoff Date :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_1_Date, new { htmlAttributes = new { @class = "form-control date-field dtl_number sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Dropoff Time :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_1_Time, new { htmlAttributes = new { @class = "form-control sand_load_input" } })</div>

                        <div class="col-md-6 form-group hide">PU To D1 :</div>
                        <div class="col-md-6 form-group hide">@Html.EditorFor(m => m.vM_EditLoadData.Pickup_DO1_Miles, new { htmlAttributes = new { @class = "form-control mileage-field sand_load_input", @onkeyup = "recalc_Miles()" } })</div>
                    </div>
                </div>
            </div>
            <div id="dtl-dropoff-2" @(Model.EditLoad_MulitpleStops == true ? "class=col-md-6" : "class=multistop-hide")>
                <div class="card border border-secondary">
                    <div class="card-header">
                        <strong class="card-title">Dropoff 2 Info</strong>
                    </div>
                    <div class="card-body">
                        <div class="col-md-6 form-group">Dropoff Well:</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_2_Location, new { htmlAttributes = new { @class = "form-control dtl_location sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Dropoff Address :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_2_Address, new { htmlAttributes = new { @class = "form-control sand_load_input" } })  </div>

                        <div class="col-md-6 form-group">Dropoff Date :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_2_Date, new { htmlAttributes = new { @class = "form-control date-field dtl_number sand_load_input" } })</div>

                        <div class="col-md-6 form-group">Dropoff Time :</div>
                        <div class="col-md-6 form-group">@Html.EditorFor(m => m.vM_EditLoadData.Dropoff_2_Time, new { htmlAttributes = new { @class = "form-control sand_load_input" } })</div>

                        <div class="col-md-6 form-group hide">D1 To D2  :</div>
                        <div class="col-md-6 form-group hide">@Html.EditorFor(m => m.vM_EditLoadData.DO1_DO2_Miles, new { htmlAttributes = new { @class = "form-control mileage-field sand_load_input", @onkeyup = "recalc_Miles()" } })</div>
                    </div>
                </div>
            </div>


            <div class="col-md-12 add-multi-droppoff ">
                <div class="col-md-4" style="padding-right: 0px"></div>
                <div class="col-md-4" style="padding-right: 0px"><button id="edit-more-stops" type="button" class="btn btn-outline-primary btn-sm add-multi-dropoff-btn"><i class="fa fa-plus"></i>&nbsp; Add/Edit More Stops</button></div>
                <div class="col-md-4" style="padding-right: 0px"></div>
            </div>
</form>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
@*<script src="//code.jquery.com/jquery-1.10.2.js"></script>*@
@*<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
<link href="../Areas/PortalPage/css/customDatePicker.css" rel='stylesheet' type='text/css'>

<script type="text/javascript">
    orginal_payout = null;
    firstload = 0;

    //Get Route Info - for Add Sand Load
    function getRouteDetails(sel) {
        $.get("../Work/getSandPayout?ID=" + sel.value, function (dataVal) {
            document.getElementsByClassName('sand_load_input').value = '';

            console.log(data[0]);

            ////Sand Detail
            document.getElementById('vM_EditLoadData_FullPayout').value = dataVal[0].Full_Payout;
            document.getElementById('vM_EditLoadData_Payout').value = dataVal[0].Payout;
            document.getElementById('vM_EditLoadData_Price_Per_Mile').value = dataVal[0].PPM;
            document.getElementById('vM_EditLoadData_Total_Miles').value = dataVal[0].Total_Mileage;
            document.getElementById('vM_EditLoadData_Total_Load_Miles').value = dataVal[0].Loaded_Mileage;
            document.getElementById('vM_EditLoadData_Pickup_Location').value = dataVal[0].Pickup_Nm; 
            document.getElementById('vM_EditLoadData_Pickup_Address').value = dataVal[0].Pickup_Address;
            document.getElementById('vM_EditLoadData_Deadhead_Miles').value = dataVal[0].Deadhead_Mileage;

            var load_date = document.getElementById('vM_EditLoadData_Load_Date').options[document.getElementById('vM_EditLoadData_Load_Date').selectedIndex].value;
            document.getElementById('vM_EditLoadData_Pickup_Date').value = load_date;
            document.getElementById('vM_EditLoadData_Dropoff_1_Date').value = load_date;

            document.getElementById('vM_EditLoadData_Dropoff_1_Location').value = dataVal[0].Dropoff_Nm;
            document.getElementById('vM_EditLoadData_Dropoff_1_Address').value = dataVal[0].Dropoff_Address;
            document.getElementById('vM_EditLoadData_Pickup_DO1_Miles').value = dataVal[0].Loaded_Mileage;

            document.getElementById('vM_EditLoadData_Weight').value = '43,000';
            document.getElementById('vM_EditLoadData_Contents').value = 'Amerifield - Sand';
            document.getElementById('vM_EditLoadData_Load_Type').value = 'SAND';
        });
    }

    function getSum(total, num) {
        return total + num;
    }
    function recalc_Miles() {
        var deadheadMiles_tb = document.getElementById("vM_EditLoadData_Deadhead_Miles");
        var ppm_tb = document.getElementById("vM_EditLoadData_PPM");
        var payout_tb = document.getElementById("vM_EditLoadData_Payout");
        var mileageField = document.getElementsByClassName("mileage-field");
        var TotalMiles_tb = document.getElementById("vM_EditLoadData_Total_Miles");
        var TotalLoadMiles_tb = document.getElementById("vM_EditLoadData_Total_Load_Miles");
        var dh_miles = 0;
        var sumlist = [];
        var sumVal = 0;
        Array.prototype.forEach.call(mileageField, function (el) {
            if (el.value) {
                sumlist.push(parseInt(el.value.replace(',', '')));
            }

            sumVal = sumlist.reduce(getSum);
            dh_miles = parseInt(deadheadMiles_tb.value);
            ppm_tb.value = (parseInt(payout_tb.value.replace(',', '').replace('$', '')) / parseInt(sumVal)).toFixed(2);
            TotalMiles_tb.value = sumVal + dh_miles;
            TotalLoadMiles_tb.value = sumVal;
        });
    }

    function getfilename() {
        var uploader = document.getElementById('EditLoad_LoadConfirmation_Upload');
        var filename = uploader.files.item(0).name;
        document.getElementById("EditLoad_LoadConfirmation_Filename").innerHTML = filename;
    };

    $(function () {
        $(".date-field").datepicker({ dateFormat: 'mm/dd/yy' });

        //On Detention Key Up Add - Dentention Pay to Total Payout
        //$("#vM_EditLoadData_Detention_Payout").bind("change keyup input", function () {
        //    var current_payout = $('#vM_EditLoadData_Payout').val();
        //    if (firstload == 0) {
        //        orginal_payout = current_payout;
        //    }
        //    var detention_val = $(this).val();
        //    var newVal = parseInt(current_payout) + parseInt(detention_val);
        //    if ($(this).val() == "" || $(this).val() == null || isNaN($(this).val()) == true) {
        //        $('#vM_EditLoadData_Payout').val(orginal_payout);
        //    } else {
        //        $('#vM_EditLoadData_Payout').val(newVal);
        //    }
        //    firstload++;
        //});

        // View Multistop data
        $('#edit-more-stops').on('click', function (event) {
            $('.multistop-hide').removeClass('multistop-hide').addClass('col-md-6').css("display", "inline");
            $(this).addClass('hide');
        });

        // Edit Load - Upload Load Confirmation
        $('.EditLoad_LoadConfirmationUpload_Submit').on('click', function (event) {
            var Loadnum = $('#vM_EditLoadData_Load_Number').val();
            $('#editLoad_UploadProgress').addClass('progress');

            var file_data = $("#EditLoad_LoadConfirmation_Upload").prop("files")[0]; // Getting the properties of file from file field
            var form_data = new FormData(); // Creating object of FormData class
            form_data.append("file", file_data) // Appending parameter named file with properties of file_field to form_data

            $.ajax({
                type: 'POST',
                cache: false,
                processData: false, // important
                contentType: false, // important
                data: form_data,
                url: '../Work/uploadLoadConfirmation?LoadNbr=' + Loadnum,
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        console.log(response.responseText);
                        $('#editLoad_UploadProgress').removeClass('progress').html('File Upload Successful');
                        $('#editLoad-uploadbox').removeClass('fileInput-maxx').addClass('fileInput-maxx-complete');
                        $('#vM_EditLoadData_Load_Confirmation_URL').val('https://maxx-express.com/Areas/PortalPage/docs/loads/' + Loadnum + '.pdf')
                    } else {
                        alert(response.responseText);
                    }
                },
                error: function (response) {
                    alert(response.responseText);
                }

            });
        });
    });

</script>
